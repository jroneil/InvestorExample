{"ast":null,"code":"import { FormGroup, FormArray, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../client.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction CreateComponent_div_26_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵelement(2, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 25);\n    i0.ɵɵelementStart(4, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_26_div_15_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const fundIndex_r5 = restoredCtx.index;\n      const investor_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onDeleteFund(investor_r1, fundIndex_r5);\n    });\n    i0.ɵɵtext(5, \"x\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const fundIndex_r5 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", fundIndex_r5);\n  }\n}\n\nfunction CreateComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelementStart(3, \"label\", 15);\n    i0.ɵɵtext(4, \"Investor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 16);\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵelement(7, \"input\", 17);\n    i0.ɵɵelement(8, \"input\", 18);\n    i0.ɵɵelementStart(9, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_26_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const investor_r1 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onAddFund(investor_r1);\n    });\n    i0.ɵɵtext(10, \"Add Fund\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 5);\n    i0.ɵɵelementStart(12, \"label\", 15);\n    i0.ɵɵtext(13, \"Funds\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 19);\n    i0.ɵɵtemplate(15, CreateComponent_div_26_div_15_Template, 6, 1, \"div\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_26_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const investorIndex_r2 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.onDeleteInvestor(investorIndex_r2);\n    });\n    i0.ɵɵtext(17, \"Delete Investor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 0);\n    i0.ɵɵelementStart(19, \"div\", 22);\n    i0.ɵɵelement(20, \"hr\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const investor_r1 = ctx.$implicit;\n    const investorIndex_r2 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", investorIndex_r2);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", investor_r1.get(\"funds\")[\"controls\"]);\n  }\n}\n\nexport let CreateComponent = /*#__PURE__*/(() => {\n  class CreateComponent {\n    constructor(fb, router, route, clientService) {\n      this.fb = fb;\n      this.router = router;\n      this.route = route;\n      this.clientService = clientService;\n      this.editMode = false;\n    }\n\n    ngOnInit() {\n      this.route.params.subscribe(params => {\n        this.id = +params['id'];\n        this.editMode = params['id'] != null;\n        this.initForm();\n        let arr = [1, 2, 3].filter(val => val != 2);\n        console.log(arr);\n        let c = 3;\n      });\n    }\n\n    submitForm() {\n      if (this.editMode) {\n        this.clientService.update(this.clientForm.value).subscribe(res => {\n          console.log('Client created!' + this.clientForm.value);\n          this.onCancel();\n          console.log(\"after cancel\");\n        });\n      } else {\n        this.clientService.create(this.clientForm.value).subscribe(res => {\n          console.log('Client created!' + this.clientForm.value);\n          this.onCancel();\n          console.log(\"after cancel\");\n        });\n      }\n    }\n\n    onAddInvestor() {\n      this.clientForm.get(\"investors\").push(this.investors);\n    }\n\n    onDeleteInvestor(index) {\n      this.clientForm.get(\"investors\").removeAt(index);\n    }\n\n    onAddFund(investor) {\n      investor.get(\"funds\").push(this.funds);\n    }\n\n    onDeleteFund(investor, index) {\n      investor.get(\"funds\").removeAt(index);\n    }\n\n    onCancel() {\n      this.router.navigateByUrl('/client');\n    }\n\n    initForm() {\n      console.log(\"in initForm\");\n      this.clientForm = this.fb.group({\n        id: \"\",\n        clientName: \"\",\n        description: \"\",\n        investors: this.fb.array([])\n      });\n      let clientName = '';\n      let clientImagePath = '';\n      let clientDescription = '';\n      let clientInvestor = new FormArray([]);\n      let investorFunds = new FormArray([]);\n      console.log(\"this.editMode==>\" + this.editMode);\n      this.title = \"Create Client\";\n\n      if (this.editMode) {\n        this.title = \"Edit Client\";\n        const client = this.clientService.getById(this.id);\n        client.subscribe(myclient => {\n          if (myclient['investors']) {\n            for (let investor of myclient.investors) {\n              for (let fund of investor.funds) {\n                investorFunds.push(new FormGroup({\n                  'id': new FormControl(fund.id),\n                  'name': new FormControl(fund.name, Validators.required)\n                }));\n              }\n\n              clientInvestor.push(new FormGroup({\n                'id': new FormControl(investor.id),\n                'name': new FormControl(investor.name, Validators.required),\n                'email': new FormControl(investor.email),\n                'funds': investorFunds\n              }));\n            }\n          }\n\n          this.clientForm = new FormGroup({\n            'id': new FormControl(myclient.id),\n            'clientName': new FormControl(myclient.clientName, Validators.required),\n            'description': new FormControl(myclient.description, Validators.required),\n            'investors': clientInvestor\n          });\n        });\n        console.log(\"=======>\" + clientName);\n        /* this.clientForm = new FormGroup({\n           'id': new FormControl(myclient.id),\n           'clientName': new FormControl(clientName, Validators.required),\n           'description': new FormControl(clientDescription, Validators.required),\n           'investors': clientInvestor\n         });*/\n      }\n    }\n\n    get investors() {\n      return this.fb.group({\n        name: \"\",\n        email: \"\",\n        funds: this.fb.array([])\n      });\n    }\n\n    get funds() {\n      return this.fb.group({\n        name: \"\"\n      });\n    }\n\n  }\n\n  CreateComponent.ɵfac = function CreateComponent_Factory(t) {\n    return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ClientService));\n  };\n\n  CreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateComponent,\n    selectors: [[\"app-create\"]],\n    decls: 27,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-lg-12\"], [1, \"col-xs-12\", \"col-sm-12\"], [\"role\", \"form\", 1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"col-xs-3\"], [\"for\", \"clientName\"], [1, \"col-xs-9\"], [\"formControlName\", \"clientName\", \"placeholder\", \"Client Name\", \"id\", \"clientName\"], [\"for\", \"description\"], [\"formControlName\", \"description\", \"rows\", \"3\", \"placeholder\", \"Description of the program\", \"id\", \"description\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"formArrayName\", \"investors\"], [\"class\", \"investors\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"investors\", 3, \"formGroupName\"], [\"for\", \"cpAddr\"], [\"id\", \"iid\", \"formControlName\", \"id\", \"type\", \"hidden\"], [\"formControlName\", \"name\", \"placeholder\", \"investor Name\", \"id\", \"iname\", 1, \"form-control\", \"margin-bottom\"], [\"formControlName\", \"email\", \"placeholder\", \"investor Email\", \"id\", \"email\", 1, \"form-control\", \"margin-bottom\"], [\"formArrayName\", \"funds\"], [\"class\", \"funds\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"col-lg-8\", \"col-lg-offset-2\"], [1, \"funds\", 3, \"formGroupName\"], [\"id\", \"fid\", \"type\", \"hidden\", \"formControlName\", \"id\"], [\"id\", \"fname\", \"placeholder\", \"Fund Name\", \"formControlName\", \"name\"]],\n    template: function CreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"form\");\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.submitForm();\n        });\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵtext(9, \"< \");\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelementStart(11, \"div\", 5);\n        i0.ɵɵelementStart(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Client Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵelement(15, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 4);\n        i0.ɵɵelementStart(17, \"div\", 5);\n        i0.ɵɵelementStart(18, \"label\", 9);\n        i0.ɵɵtext(19, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 7);\n        i0.ɵɵelement(21, \"textarea\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function CreateComponent_Template_button_click_22_listener() {\n          return ctx.onAddInvestor();\n        });\n        i0.ɵɵtext(23, \"Add Investor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"hr\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 12);\n        i0.ɵɵtemplate(26, CreateComponent_div_26_Template, 21, 2, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.clientForm);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientForm.get(\"investors\")[\"controls\"]);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.FormArrayName, i4.NgForOf, i1.FormGroupName],\n    styles: [\".margin-bottom[_ngcontent-%COMP%]{margin-bottom:15px}\"]\n  });\n  return CreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}